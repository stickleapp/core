<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Scheduling Frequencies
    |--------------------------------------------------------------------------
    |
    | How frequently (in minutes) should the various tasks be run.
    |
    | - Export Segments. Store the objects (users, groups, etc) that are part of each segment
    | - Record Segment Statistics. Store the number of users in each segment
    | - Record Entity Statistics. Store the number of users in each group
    | - Rollup Events. Aggregate the events into the event statistics table
    | - Rollup Page Views. Aggregate the page views into the page view statistics table
    | - Rollup Sessions. Aggregate the sessions into the session statistics table
    */
    'schedule' => [
        'exportSegments' => env('STICKLE_FREQUENCY_EXPORT_SEGMENTS', {{interval}}),
        'recordSegmentStatistics' => env('STICKLE_FREQUENCY_EXPORT_SEGMENT_STATISTICS', {{interval}}),
        'recordEntityStatistics' => env('STICKLE_FREQUENCY_EXPORT_ENTITY_STATISTICS', {{interval}}),
        'rollupEvents' => env('STICKLE_FREQUENCY_ROLLUP_EVENTS', {{interval}}),
        'rollupPageViews' => env('STICKLE_FREQUENCY_ROLLUP_PAGEVIEWS', {{interval}}),
        'rollupSessions' => env('STICKLE_FREQUENCY_ROLLUP_SESSIONS', {{interval}}),
    ],

    /*
    |--------------------------------------------------------------------------
    | Database
    |--------------------------------------------------------------------------
    |
    | Which database connection (Defined in config.database) should be use.
    |
    | This must be a Postgres based connection.
    */
    'database' => [
        'schema' => env('STICKLE_DATABASE_SCHEMA', 'public'),
        'connection' => env('DB_CONNECTION', '{{dbConnection}}'),
        'tablePrefix' => env('STICKLE_DATABASE_TABLE_PREFIX', '{{tablePrefix}}'),
        'enablePartitions' => env('STICKLE_ENABLE_PARTITIONS', {{enablePartitioning}}),
        'partitions' => [
            'events' => [
                'interval' => 'month',
                'extension' => '1 month',
                'retention' => '1 years',
            ],
            'page_views' => [
                'interval' => 'month',
                'extension' => '1 month',
                'retention' => '1 years',
            ],
            'sessions' => [
                'interval' => 'month',
                'extension' => '1 month',
                'retention' => '1 years',
            ],
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Paths
    |--------------------------------------------------------------------------
    |
    | Where are certain items located in your Laravel project
    */
    'namespaces' => [
        'listeners' => env('STICKLE_NAMESPACES_LISTENERS', '{{listenersPath}}'),
        'models' => env('STICKLE_NAMESPACES_MODELS', '{{modelsPath}}'),
        'segments' => env('STICKLE_NAMESPACES_SEGMENTS', '{{segmentsPath}}'),
    ],

    'storage' => [
        'exports' => env('STICKLE_STORAGE_EXPORTS', '{{storageDisk}}'),
    ],

    /*
    |--------------------------------------------------------------------------
    | Routes
    |--------------------------------------------------------------------------
    |
    | Web and API Routes for Stickle
    */
    'routes' => [
        'api' => [
            'prefix' => env('STICKLE_API_PREFIX', '{{apiPrefix}}'),
            'middleware' => env('STICKLE_API_MIDDLEWARE', ['api']),
        ],
        'web' => [
            'prefix' => env('STICKLE_WEB_PREFIX', '{{webPrefix}}'),
            'middleware' => env('STICKLE_WEB_MIDDLEWARE', ['web']),
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Broadcast
    |--------------------------------------------------------------------------
    |
    | Settings for the broadcasting of events
    */
    'broadcasting' => [
        'channels' => [
            'firehose' => env('STICKLE_BROADCASTING_CHANNEL_FIREHOSE', 'stickle.firehose'),
            'object' => env('STICKLE_BROADCASTING_CHANNEL_OBJECT', 'stickle.object.%s.%s'),
            'class' => env('STICKLE_BROADCASTING_CHANNEL_CLASS', 'stickle.class.%s'),
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Tracking
    |--------------------------------------------------------------------------
    |
    | Settings determining the behaviour of the tracking
    */
    'tracking' => [
        'server' => [
            'loadMiddleware' => env('STICKLE_TRACK_SERVER_LOAD_MIDDLEWARE', {{serverLoadMiddleware}}),
            'trackAuthenticationEvents' => env('STICKLE_TRACK_SERVER_AUTHENTICATION_EVENTS', {{trackAuthenticationEvents}}),
            'authenticationEventsTracked' => [
                'Authenticated',
                'CurrentDeviceLogout',
                'Login',
                'Logout',
                'OtherDeviceLogout',
                'PasswordReset',
                'Registered',
                'Validated',
                'Verified',
            ],
            'trackRequests' => env('STICKLE_TRACK_SERVER_REQUESTS', true),
        ],
        'client' => [
            'loadMiddleware' => env('STICKLE_TRACK_CLIENT_LOAD_MIDDLEWARE', true),
            'trackPageViews' => env('STICKLE_TRACK_CLIENT_PAGE_VIEWS', true),
        ],
    ],
];
